{"ast":null,"code":"var _jsxFileName = \"D:\\\\practice\\\\react\\\\portfolio\\\\pages\\\\index.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport useSWR from 'swr';\n\nfunction fetcher(url) {\n  return fetch(url).then(r => r.json());\n}\n\nexport default function Index() {\n  const {\n    data,\n    error\n  } = useSWR('/api/randomQuote', fetcher); // The following line has optional chaining, added in Next.js v9.1.5,\n  // is the same as `data && data.author`\n\n  const author = data === null || data === void 0 ? void 0 : data.author;\n  let quote = data === null || data === void 0 ? void 0 : data.quote;\n  if (!data) quote = 'Loading...';\n  if (error) quote = 'Failed to fetch the quote.';\n  return __jsx(\"main\", {\n    className: \"jsx-1236022937\" + \" \" + \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"jsx-1236022937\" + \" \" + \"quote\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }, quote), author && __jsx(\"span\", {\n    className: \"jsx-1236022937\" + \" \" + \"author\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 24\n    }\n  }, \"- \", author), __jsx(_JSXStyle, {\n    id: \"1236022937\",\n    __self: this\n  }, \"main.jsx-1236022937{width:90%;max-width:900px;margin:300px auto;text-align:center;}.quote.jsx-1236022937{font-family:cursive;color:#e243de;font-size:24px;padding-bottom:10px;}.author.jsx-1236022937{font-family:sans-serif;color:#559834;font-size:20px;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkQ6XFxwcmFjdGljZVxccmVhY3RcXHBvcnRmb2xpb1xccGFnZXNcXGluZGV4LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXFCd0IsQUFHcUIsQUFNVSxBQU1HLFVBWFAsVUFNRixHQU1BLEdBWEksUUFNSCxHQU1BLE9BWEcsS0FNRSxHQU10QixVQVhBLE9BTUEiLCJmaWxlIjoiRDpcXHByYWN0aWNlXFxyZWFjdFxccG9ydGZvbGlvXFxwYWdlc1xcaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdXNlU1dSIGZyb20gJ3N3cic7XHJcblxyXG5mdW5jdGlvbiBmZXRjaGVyKHVybCkge1xyXG4gICAgcmV0dXJuIGZldGNoKHVybCkudGhlbihyID0+IHIuanNvbigpKTtcclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gSW5kZXgoKSB7XHJcbiAgICBjb25zdCB7IGRhdGEsIGVycm9yIH0gPSB1c2VTV1IoJy9hcGkvcmFuZG9tUXVvdGUnLCBmZXRjaGVyKTtcclxuICAgIC8vIFRoZSBmb2xsb3dpbmcgbGluZSBoYXMgb3B0aW9uYWwgY2hhaW5pbmcsIGFkZGVkIGluIE5leHQuanMgdjkuMS41LFxyXG4gICAgLy8gaXMgdGhlIHNhbWUgYXMgYGRhdGEgJiYgZGF0YS5hdXRob3JgXHJcbiAgICBjb25zdCBhdXRob3IgPSBkYXRhPy5hdXRob3I7XHJcbiAgICBsZXQgcXVvdGUgPSBkYXRhPy5xdW90ZTtcclxuXHJcbiAgICBpZiAoIWRhdGEpIHF1b3RlID0gJ0xvYWRpbmcuLi4nO1xyXG4gICAgaWYgKGVycm9yKSBxdW90ZSA9ICdGYWlsZWQgdG8gZmV0Y2ggdGhlIHF1b3RlLic7XHJcblxyXG4gICAgcmV0dXJuIChcclxuICAgICAgICA8bWFpbiBjbGFzc05hbWU9XCJjZW50ZXJcIj5cclxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJxdW90ZVwiPntxdW90ZX08L2Rpdj5cclxuICAgICAgICAgICAge2F1dGhvciAmJiA8c3BhbiBjbGFzc05hbWU9XCJhdXRob3JcIj4tIHthdXRob3J9PC9zcGFuPn1cclxuXHJcbiAgICAgICAgICAgIDxzdHlsZSBqc3g+e2BcclxuICAgICAgICBtYWluIHtcclxuICAgICAgICAgIHdpZHRoOiA5MCU7XHJcbiAgICAgICAgICBtYXgtd2lkdGg6IDkwMHB4O1xyXG4gICAgICAgICAgbWFyZ2luOiAzMDBweCBhdXRvO1xyXG4gICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICAgIH1cclxuICAgICAgICAucXVvdGUge1xyXG4gICAgICAgICAgZm9udC1mYW1pbHk6IGN1cnNpdmU7XHJcbiAgICAgICAgICBjb2xvcjogI2UyNDNkZTtcclxuICAgICAgICAgIGZvbnQtc2l6ZTogMjRweDtcclxuICAgICAgICAgIHBhZGRpbmctYm90dG9tOiAxMHB4O1xyXG4gICAgICAgIH1cclxuICAgICAgICAuYXV0aG9yIHtcclxuICAgICAgICAgIGZvbnQtZmFtaWx5OiBzYW5zLXNlcmlmO1xyXG4gICAgICAgICAgY29sb3I6ICM1NTk4MzQ7XHJcbiAgICAgICAgICBmb250LXNpemU6IDIwcHg7XHJcbiAgICAgICAgfVxyXG4gICAgICBgfTwvc3R5bGU+XHJcbiAgICAgICAgPC9tYWluPlxyXG4gICAgKTtcclxufSJdfQ== */\\n/*@ sourceURL=D:\\\\\\\\practice\\\\\\\\react\\\\\\\\portfolio\\\\\\\\pages\\\\\\\\index.js */\"));\n}","map":{"version":3,"sources":["D:/practice/react/portfolio/pages/index.js"],"names":["useSWR","fetcher","url","fetch","then","r","json","Index","data","error","author","quote"],"mappings":";;;;AAAA,OAAOA,MAAP,MAAmB,KAAnB;;AAEA,SAASC,OAAT,CAAiBC,GAAjB,EAAsB;AAClB,SAAOC,KAAK,CAACD,GAAD,CAAL,CAAWE,IAAX,CAAgBC,CAAC,IAAIA,CAAC,CAACC,IAAF,EAArB,CAAP;AACH;;AAED,eAAe,SAASC,KAAT,GAAiB;AAC5B,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAkBT,MAAM,CAAC,kBAAD,EAAqBC,OAArB,CAA9B,CAD4B,CAE5B;AACA;;AACA,QAAMS,MAAM,GAAGF,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAEE,MAArB;AACA,MAAIC,KAAK,GAAGH,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAEG,KAAlB;AAEA,MAAI,CAACH,IAAL,EAAWG,KAAK,GAAG,YAAR;AACX,MAAIF,KAAJ,EAAWE,KAAK,GAAG,4BAAR;AAEX,SACI;AAAA,wCAAgB,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA,wCAAe,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwBA,KAAxB,CADJ,EAEKD,MAAM,IAAI;AAAA,wCAAgB,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA4BA,MAA5B,CAFf;AAAA;AAAA;AAAA,i1EADJ;AA0BH","sourcesContent":["import useSWR from 'swr';\r\n\r\nfunction fetcher(url) {\r\n    return fetch(url).then(r => r.json());\r\n}\r\n\r\nexport default function Index() {\r\n    const { data, error } = useSWR('/api/randomQuote', fetcher);\r\n    // The following line has optional chaining, added in Next.js v9.1.5,\r\n    // is the same as `data && data.author`\r\n    const author = data?.author;\r\n    let quote = data?.quote;\r\n\r\n    if (!data) quote = 'Loading...';\r\n    if (error) quote = 'Failed to fetch the quote.';\r\n\r\n    return (\r\n        <main className=\"center\">\r\n            <div className=\"quote\">{quote}</div>\r\n            {author && <span className=\"author\">- {author}</span>}\r\n\r\n            <style jsx>{`\r\n        main {\r\n          width: 90%;\r\n          max-width: 900px;\r\n          margin: 300px auto;\r\n          text-align: center;\r\n        }\r\n        .quote {\r\n          font-family: cursive;\r\n          color: #e243de;\r\n          font-size: 24px;\r\n          padding-bottom: 10px;\r\n        }\r\n        .author {\r\n          font-family: sans-serif;\r\n          color: #559834;\r\n          font-size: 20px;\r\n        }\r\n      `}</style>\r\n        </main>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}